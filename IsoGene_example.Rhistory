## 2022年8月4日
## IsoGene（R包）旨在使用几个测试统计数据来识别表达水平相对于增加的剂量具有单调趋势的基因
## IsoGene 软件包提供了五个测试统计量的估计值和 p 值，用于确定表达水平随实验剂量水平变化的基因子集
## 适用于给药剂量的研究,确定治疗具有某些效果并选择看起来有效和安全的一个或多个剂量
## 数据集至少三个剂量（包括0），且样本大于五个
install.packages("installr")
library(installr)
updateR()
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("affy")
install.packages("IsoGene")
library(IsoGene)
data(dopamine) #模拟数据
require(Biobase)
express <- data.frame(exprs(dopamine))
View(express) #行为基因名，列为计量
dose <- unlist(pData(dopamine)) #剂量值
IsoPlot(dose,express[56,],type="continuous", add.curve=TRUE) #查看第56行基因的计量表达
#IsoPlot()：绘制数据点、每个剂量的样本均值和等渗回归线（可选）
rawpvalue <- IsoRawp(dose, express, niter=1000) #函数 IsoRawp() 用于根据排列计算原始 p 值。 需要在此函数中指定剂量水平、基因表达的数据框以及用于近似零分布的排列数。
#输出对象 rawpvalue 是一个包含四个组件的列表，其中包含五个测试统计量的 p 值：two-sided p-values, one-sided p-values,p up-values and p Down-values。
#一旦获得原始 p 值，就需要调整这些 p 值以进行多次测试
IsoTestBH(rawp, FDR=c(0.05,0.1),type=c("BH","BY"), stat=c("E2","Williams","Marcus","M","ModifM")) #用于在控制 FDR 的同时调整 p 值
#结果生成一个基因列表，这些基因具有显着的增加/减少趋势。
data(exampleData) #模拟数据
x <- c(rep(1,3),rep(2,3),rep(3,3),rep(4,3))
gene1 <- as.numeric(exampleData[1,]) #选择排列在第一行的基因
IsoPlot(x, gene1)
set.seed(2022)
x <- c(rep(1,3),rep(2,3),rep(3,3))
y1 <- matrix(rnorm(4500, 1,1),500,9) #500个没有趋势的基因
y2 <- matrix(c(rnorm(1500, 1,1),rnorm(1500,2,1),rnorm(1500,3,1)),500,9) #500个基因呈上升趋势
y <- data.frame(rbind(y1, y2))
y<-as.data.frame(lapply(y,as.numeric))
y<-y[which(rowSums(y) > 0),] #删除数据框中数值全部为0的行
fudge.factor <- Isofudge(x,y) #在SAM程序中计算五个SAM(微阵列的显着性分析)测试统计的fudge因子
x <- c(rep(1,3),rep(2,3),rep(3,3),rep(4,3))
y <- c(rnorm(3,1,1),rnorm(3,2,1),rnorm(3,3,1),rnorm(3,4,1))
stat <- IsoGene1(x,y) #针对增加和减少趋势计算的五个测试统计量，仅针对一个gene（计算单个基因的五个测试统计值）
#IsoGenem()：计算所有基因的五个测试统计值
x.res <- c(rep(1,3),rep(2,3),rep(3,3))
y1 <- matrix(rnorm(90, 1,1),10,9) # 10个基因没有趋势
y2 <- matrix(c(rnorm(30, 1,1), rnorm(30,2,1),rnorm(30,3,1)), 10, 9) #10个基因具有上升趋势
dat.mat <- data.frame(rbind(y1, y2))
dat.mat<-na.omit(dat.mat)
niter=1000 #niter:要使用的排列数
pval.maxT <- IsomaxT(x.res, dat.mat,niter) #该函数使用 maxT 过程计算五个检验统计量（全局似然检验、Williams、Marcus、M 和修改后的 M）的调整 p 值。
#IsomaxT 数据量大时，运行时间有点长要有耐心
IsoPlot(x, y)
IsoPlot(x, y, type="ordinal", add.curve=TRUE)
par(mar=c(1,1,1,1))
IsopvaluePlot(x, y, niter = 1000, stat = "Williams") #绘制给定测试的基因的 p Up 和 p Down 值
y1 <- matrix(rnorm(4500, 1,1),500,9)
y2 <- matrix(c(rnorm(1500, 1,1),rnorm(1500,2,1),rnorm(1500,3,1)),500,9)
y <- data.frame(rbind(y1, y2))
x <- c(rep(1,3),rep(2,3),rep(3,3))
qqstat <- Isoqqstat(x, y, fudge="pooled", niter = 50) #获取 SAM 正则化检验统计量
allfdr <- Isoallfdr(qqstat, ,stat="E2") #获取增量表
qval <- Isoqval(delta=0.2, allfdr, qqstat, stat="E2")
IsoSAMPlot(qqstat, allfdr, FDR = 0.1, stat = "E2") #SAM 过程的图形输出
#图a：显示了 FDR（50% 或 90%）与 Δ 的关系
#图b：显着基因的数量与 Δ
#图c：显示了误报的数量（从第 50 个或第 90 个百分位数获得）与 Δ
#图d：观察到的与预期的（从排列获得）测试统计数据，其中红点是那些称为差异表达的基因。
set.seed(202)
rp <- data.frame(paste("g",1:100), matrix(runif(500,0,0.1), 100, 5))
sign <- IsoTestBH(rp, FDR = 0.05, type = "BH", stat = "E2") #BH程序控制错误发现率 (FDR):它通过使用每个突变来估计 FDR，其中 FDR 计算为被错误称为基因数量的中位数除以被称为显着基因的数量。
#IsoTestBH()：使用 BH- 或 BY-FDR 程序调整五个检验统计量的原始 p 值
#IsoBHplot()：绘制原始 p 值和调整后的 BH- 和 BY-FDR p 值
## 剂量反应微阵列数据 (SAM) 的意义分析
x <- c(rep(1,3),rep(2,3),rep(3,3))
y1 <- matrix(rnorm(4500, 1,1),500,9)
y2 <- matrix(c(rnorm(1500, 1,1),rnorm(1500,2,1),rnorm(1500,3,1)),500,9)
y <- data.frame(rbind(y1, y2))
View(y)
SAM.obj <- IsoTestSAM(x, y, fudge="pooled", niter=50, FDR=0.05, stat="E2")
View(SAM.obj)
SAM.obj[[1]]
IsoTestSAM(x, y, fudge=c("none","pooled"), niter=100, FDR=0.05, stat=c("E2","Williams","Marcus","M","ModifM")) #剂量水平 (x)、基因表达 (y)、排列数 (niter)、FDR 水平、检验统计量和使用 fudge 因子的选项
SAM.ModifM <- IsoTestSAM(dose, express, fudge="pooled", niter=100, FDR=0.05, stat="ModifM")
#IsoTestSAM()：实现了微阵列 (SAM) 的显着性分析，使用 SAM 程序获取重要基因列表
#IsoGenemSAM() ：计算五个 SAM 正则化测试统计的值
SAM.ModifM.result <- SAM.ModifM[[1]] #提取重要基因列表
#SAM.ModifM.result 对象包含一个六列矩阵：探针 ID、数据集中基因的相应行号、观察到的 SAM 正则化 M0 检验统计量、q 值（从最低错误发现率，该基因被称为显着），所有基因的每个突变测试统计的联合分布获得的原始 p 值，以及 BH FDR 调整后的 p 值。
#Noted:基因越来越多地根据 SAM 正则化 M0 测试统计值（即 stat.val）进行排序。
#基于重采样的多重测试和SAM的结果比较
save.image()
